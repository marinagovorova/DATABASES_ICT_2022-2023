--
-- PostgreSQL database dump
--

-- Dumped from database version 15.2 (Ubuntu 15.2-1.pgdg18.04+1)
-- Dumped by pg_dump version 15.2 (Ubuntu 15.2-1.pgdg18.04+1)

-- Started on 2023-03-18 23:26:51 MSK

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE SCHEMA "Library";


ALTER SCHEMA "Library" OWNER TO ivan;

SET default_tablespace = '';

SET default_table_access_method = heap;


CREATE TABLE "Library"."Act_of_accounting" (
    accounting_act_id integer NOT NULL,
    employee_id integer NOT NULL,
    act_date date NOT NULL,
    revaluation_factor numeric NOT NULL,
    act_type character varying(20) NOT NULL,
    status character varying(20) NOT NULL,
    CONSTRAINT act_of_accounting_chk_1 CHECK ((revaluation_factor >= (0)::numeric)),
    CONSTRAINT act_of_accounting_chk_2 CHECK ((((status)::text = 'оформлен'::text) OR ((status)::text = 'ошибка'::text))),
    CONSTRAINT act_of_accounting_chk_3 CHECK ((((act_type)::text = 'выдача'::text) OR ((act_type)::text = 'принятие'::text)))
);


ALTER TABLE "Library"."Act_of_accounting" OWNER TO ivan;


ALTER TABLE "Library"."Act_of_accounting" ALTER COLUMN accounting_act_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "Library"."Act_of_accounting_accounting_act_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE "Library"."Admission" (
    admission_id integer NOT NULL,
    waybill_code integer NOT NULL,
    library_edition_code character varying(10) NOT NULL,
    initial_cost integer NOT NULL,
    CONSTRAINT admission_chk_1 CHECK ((initial_cost > 0))
);


ALTER TABLE "Library"."Admission" OWNER TO ivan;


ALTER TABLE "Library"."Admission" ALTER COLUMN admission_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "Library"."Admission_admission_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE "Library"."Book_information" (
    book_code integer NOT NULL,
    name_b character varying(30) NOT NULL,
    field_of_knowledge character varying(20) NOT NULL,
    origional_language character varying(20) NOT NULL,
    type_v character varying(20) NOT NULL,
    author character varying(50) NOT NULL,
    CONSTRAINT book_information_chk_1 CHECK ((((origional_language)::text = 'русский'::text) OR ((origional_language)::text = 'английский'::text)))
);


ALTER TABLE "Library"."Book_information" OWNER TO ivan;


ALTER TABLE "Library"."Book_information" ALTER COLUMN book_code ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "Library"."Book_information_book_code_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE "Library"."Copy" (
    copy_id integer NOT NULL,
    library_edition_code character varying(10) NOT NULL,
    storage_location_id integer NOT NULL
);


ALTER TABLE "Library"."Copy" OWNER TO ivan;

ALTER TABLE "Library"."Copy" ALTER COLUMN copy_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "Library"."Copy_copy_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE "Library"."Edition" (
    library_edition_code character varying(10) NOT NULL,
    publishing_id integer NOT NULL,
    book_code integer NOT NULL,
    edition_name character varying(20) NOT NULL,
    register_value integer NOT NULL,
    former character varying(20) NOT NULL,
    eddition_number integer NOT NULL,
    edition_language character varying(20) NOT NULL,
    library_description character varying(120) NOT NULL,
    edition_date date NOT NULL,
    CONSTRAINT edition_chk_1 CHECK ((edition_date > '1800-01-01'::date)),
    CONSTRAINT edition_chk_2 CHECK ((register_value > 0)),
    CONSTRAINT edition_chk_3 CHECK ((eddition_number > 0)),
    CONSTRAINT edition_chk_4 CHECK ((((edition_language)::text = 'русский'::text) OR ((edition_language)::text = 'английский'::text)))
);


ALTER TABLE "Library"."Edition" OWNER TO ivan;

CREATE TABLE "Library"."Librarian" (
    employee_id integer NOT NULL,
    full_name character varying(30) NOT NULL,
    post character varying(20) NOT NULL
);


ALTER TABLE "Library"."Librarian" OWNER TO ivan;

ALTER TABLE "Library"."Librarian" ALTER COLUMN employee_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "Library"."Librarian_employee_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE "Library"."Library_card" (
    card_id integer NOT NULL,
    status character varying(30) NOT NULL,
    reason character varying(30) NOT NULL,
    reader_id integer NOT NULL,
    CONSTRAINT "Library_card_chk_1" CHECK ((((status)::text = 'действующий'::text) OR ((status)::text = 'остановлена'::text)))
);


ALTER TABLE "Library"."Library_card" OWNER TO ivan;

CREATE TABLE "Library"."Operation" (
    copy_id integer NOT NULL,
    admission_id integer NOT NULL,
    accounting_act_id integer NOT NULL,
    operation_id integer NOT NULL
);


ALTER TABLE "Library"."Operation" OWNER TO ivan;

ALTER TABLE "Library"."Operation" ALTER COLUMN operation_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "Library"."Operation_operation_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


CREATE TABLE "Library"."Publishing_house" (
    publishing_house_id integer NOT NULL,
    publishing_name character varying(30) NOT NULL,
    city character varying(30) NOT NULL
);


ALTER TABLE "Library"."Publishing_house" OWNER TO ivan;


ALTER TABLE "Library"."Publishing_house" ALTER COLUMN publishing_house_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "Library"."Publishing_house_publishing_house_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


CREATE TABLE "Library"."Reader" (
    reader_id integer NOT NULL,
    full_name character varying(40) NOT NULL,
    passport_data integer NOT NULL,
    address character varying(30) NOT NULL,
    email character varying(30) NOT NULL,
    telephone_number bigint NOT NULL,
    CONSTRAINT reader_chk_1 CHECK ((telephone_number > '80000000000'::bigint)),
    CONSTRAINT reader_chk_2 CHECK ((passport_data > 10000000))
);


ALTER TABLE "Library"."Reader" OWNER TO ivan;


CREATE TABLE "Library"."Storage" (
    storage_id integer NOT NULL,
    room integer NOT NULL,
    shelf integer NOT NULL,
    shelving integer NOT NULL,
    CONSTRAINT "Storage_chk_1" CHECK ((room > 0)),
    CONSTRAINT "Storage_chk_2" CHECK ((shelf > 0)),
    CONSTRAINT "Storage_chk_3" CHECK ((shelving > 0))
);


ALTER TABLE "Library"."Storage" OWNER TO ivan;



ALTER TABLE "Library"."Storage" ALTER COLUMN storage_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "Library"."Storage_storage_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);




CREATE TABLE "Library"."Stored" (
    copy_id integer NOT NULL,
    storage_id integer NOT NULL,
    stored_from date NOT NULL,
    stored_until date NOT NULL,
    status character varying(30) NOT NULL,
    stored_id integer NOT NULL,
    CONSTRAINT "Stored_chk_1" CHECK ((stored_until > stored_from)),
    CONSTRAINT "Stored_chk_2" CHECK ((((status)::text = 'в наличии'::text) OR ((status)::text = 'занята'::text)))
);


ALTER TABLE "Library"."Stored" OWNER TO ivan;



ALTER TABLE "Library"."Stored" ALTER COLUMN stored_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "Library"."Stored_stored_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE "Library"."Subscription" (
    return_date date NOT NULL,
    fine integer,
    "from" date NOT NULL,
    "to" date NOT NULL,
    copy_id integer NOT NULL,
    card_id integer NOT NULL,
    subscription_id integer NOT NULL,
    CONSTRAINT "Subscription_chk_1" CHECK ((fine >= 0)),
    CONSTRAINT "Subscription_chk_2" CHECK (('to'::text > 'from'::text))
);


ALTER TABLE "Library"."Subscription" OWNER TO ivan;



ALTER TABLE "Library"."Subscription" ALTER COLUMN subscription_id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "Library"."Subscription_subscription_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE "Library"."Waybill" (
    waybill_code integer NOT NULL,
    provider character varying(20) NOT NULL,
    w_date date NOT NULL
);


ALTER TABLE "Library"."Waybill" OWNER TO ivan;



ALTER TABLE "Library"."Waybill" ALTER COLUMN waybill_code ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "Library"."Waybill_waybill_code_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);




INSERT INTO "Library"."Act_of_accounting" (accounting_act_id, employee_id, act_date, revaluation_factor, act_type, status) OVERRIDING SYSTEM VALUE VALUES (1, 2, '2022-10-20', 0.01, 'выдача', 'оформлен');
INSERT INTO "Library"."Act_of_accounting" (accounting_act_id, employee_id, act_date, revaluation_factor, act_type, status) OVERRIDING SYSTEM VALUE VALUES (2, 3, '2022-10-21', 0.02, 'принятие', 'ошибка');
INSERT INTO "Library"."Act_of_accounting" (accounting_act_id, employee_id, act_date, revaluation_factor, act_type, status) OVERRIDING SYSTEM VALUE VALUES (3, 4, '2022-10-22', 0.03, 'принятие', 'оформлен');
INSERT INTO "Library"."Act_of_accounting" (accounting_act_id, employee_id, act_date, revaluation_factor, act_type, status) OVERRIDING SYSTEM VALUE VALUES (4, 5, '2022-10-10', 0.015, 'выдача', 'оформлен');




INSERT INTO "Library"."Admission" (admission_id, waybill_code, library_edition_code, initial_cost) OVERRIDING SYSTEM VALUE VALUES (3, 1, 'bb-33', 500);
INSERT INTO "Library"."Admission" (admission_id, waybill_code, library_edition_code, initial_cost) OVERRIDING SYSTEM VALUE VALUES (4, 2, 'bb-44', 400);
INSERT INTO "Library"."Admission" (admission_id, waybill_code, library_edition_code, initial_cost) OVERRIDING SYSTEM VALUE VALUES (5, 3, 'bb-55', 1100);
INSERT INTO "Library"."Admission" (admission_id, waybill_code, library_edition_code, initial_cost) OVERRIDING SYSTEM VALUE VALUES (6, 4, 'bb-66', 250);




INSERT INTO "Library"."Book_information" (book_code, name_b, field_of_knowledge, origional_language, type_v, author) OVERRIDING SYSTEM VALUE VALUES (1, 'Игрок', 'худ. литература', 'русский', 'роман', 'Ф.М. Достоевский');
INSERT INTO "Library"."Book_information" (book_code, name_b, field_of_knowledge, origional_language, type_v, author) OVERRIDING SYSTEM VALUE VALUES (2, 'Заводной апельсин', 'худ. литература', 'русский', 'антиутопия', 'Энтони Бёрджесс');
INSERT INTO "Library"."Book_information" (book_code, name_b, field_of_knowledge, origional_language, type_v, author) OVERRIDING SYSTEM VALUE VALUES (3, 'Физика', 'образовательная', 'русский', 'учебник', 'д. Джанколи');
INSERT INTO "Library"."Book_information" (book_code, name_b, field_of_knowledge, origional_language, type_v, author) OVERRIDING SYSTEM VALUE VALUES (4, 'Мартин Иден', 'худ. литература', 'английский', 'роман', 'Джек Лондон');




INSERT INTO "Library"."Copy" (copy_id, library_edition_code, storage_location_id) OVERRIDING SYSTEM VALUE VALUES (1, 'bb-33', 100);
INSERT INTO "Library"."Copy" (copy_id, library_edition_code, storage_location_id) OVERRIDING SYSTEM VALUE VALUES (2, 'bb-44', 101);
INSERT INTO "Library"."Copy" (copy_id, library_edition_code, storage_location_id) OVERRIDING SYSTEM VALUE VALUES (3, 'bb-55', 102);
INSERT INTO "Library"."Copy" (copy_id, library_edition_code, storage_location_id) OVERRIDING SYSTEM VALUE VALUES (4, 'bb-66', 103);




INSERT INTO "Library"."Edition" (library_edition_code, publishing_id, book_code, edition_name, register_value, former, eddition_number, edition_language, library_description, edition_date) VALUES ('bb-33', 1, 1, 'русская классика', 303, 'А. Ферез', 1, 'русский', 'Роману присущи автобиографические мотивы, ведь азартным игроком был и сам Достоевский', '2021-12-23');
INSERT INTO "Library"."Edition" (library_edition_code, publishing_id, book_code, edition_name, register_value, former, eddition_number, edition_language, library_description, edition_date) VALUES ('bb-44', 2, 2, 'зарубежная классика', 304, 'А. Ферез', 12, 'русский', 'Скандальный роман, являющийся литературным парадоксом 20 века', '2017-04-18');
INSERT INTO "Library"."Edition" (library_edition_code, publishing_id, book_code, edition_name, register_value, former, eddition_number, edition_language, library_description, edition_date) VALUES ('bb-55', 3, 3, 'учебный материал', 305, 'Ю.А. Данилова', 13, 'русский', 'Книга охватывающая большой материал по всем разделам классической и современной физики', '1990-12-23');
INSERT INTO "Library"."Edition" (library_edition_code, publishing_id, book_code, edition_name, register_value, former, eddition_number, edition_language, library_description, edition_date) VALUES ('bb-66', 4, 4, 'зарубежная классика', 306, 'А. Матвеева', 14, 'английский', 'Адаптированный текст знаменитого романа Джека Лондона с подробными комментариями', '2018-04-23');




INSERT INTO "Library"."Librarian" (employee_id, full_name, post) OVERRIDING SYSTEM VALUE VALUES (2, 'Игорь', 'зам. директора');
INSERT INTO "Library"."Librarian" (employee_id, full_name, post) OVERRIDING SYSTEM VALUE VALUES (3, 'Михаил', 'директор');
INSERT INTO "Library"."Librarian" (employee_id, full_name, post) OVERRIDING SYSTEM VALUE VALUES (4, 'Евгения', 'библиотекарь');
INSERT INTO "Library"."Librarian" (employee_id, full_name, post) OVERRIDING SYSTEM VALUE VALUES (5, 'Людмила', 'библиотекарь');



INSERT INTO "Library"."Library_card" (card_id, status, reason, reader_id) VALUES (100, 'действующий', '-', 1);
INSERT INTO "Library"."Library_card" (card_id, status, reason, reader_id) VALUES (101, 'действующий', '-', 2);
INSERT INTO "Library"."Library_card" (card_id, status, reason, reader_id) VALUES (102, 'остановлена', 'просрочен', 3);
INSERT INTO "Library"."Library_card" (card_id, status, reason, reader_id) VALUES (103, 'действующий', '-', 4);



INSERT INTO "Library"."Operation" (copy_id, admission_id, accounting_act_id, operation_id) OVERRIDING SYSTEM VALUE VALUES (1, 3, 1, 1);
INSERT INTO "Library"."Operation" (copy_id, admission_id, accounting_act_id, operation_id) OVERRIDING SYSTEM VALUE VALUES (2, 4, 2, 2);
INSERT INTO "Library"."Operation" (copy_id, admission_id, accounting_act_id, operation_id) OVERRIDING SYSTEM VALUE VALUES (3, 5, 3, 3);
INSERT INTO "Library"."Operation" (copy_id, admission_id, accounting_act_id, operation_id) OVERRIDING SYSTEM VALUE VALUES (4, 6, 4, 4);



INSERT INTO "Library"."Publishing_house" (publishing_house_id, publishing_name, city) OVERRIDING SYSTEM VALUE VALUES (1, 'АСТ', 'Санкт-Петербург');
INSERT INTO "Library"."Publishing_house" (publishing_house_id, publishing_name, city) OVERRIDING SYSTEM VALUE VALUES (2, 'Мир', 'Москва');
INSERT INTO "Library"."Publishing_house" (publishing_house_id, publishing_name, city) OVERRIDING SYSTEM VALUE VALUES (3, 'АСТ', 'Санкт-Петербург');
INSERT INTO "Library"."Publishing_house" (publishing_house_id, publishing_name, city) OVERRIDING SYSTEM VALUE VALUES (4, 'АСТ', 'Санкт-Петербург');




INSERT INTO "Library"."Reader" (reader_id, full_name, passport_data, address, email, telephone_number) VALUES (1, 'Борисов Юрий Александрович', 78787878, 'набережная Фонтанки 28', 'ry@gmail@com', 89112345678);
INSERT INTO "Library"."Reader" (reader_id, full_name, passport_data, address, email, telephone_number) VALUES (2, 'Кирилл', 50560633, 'улица Яхтенная 16', 'banshi@gmail.com', 89117456758);
INSERT INTO "Library"."Reader" (reader_id, full_name, passport_data, address, email, telephone_number) VALUES (3, 'Ира', 30347455, 'улица Туристская', 'lobster@gmail.com', 89113563435);
INSERT INTO "Library"."Reader" (reader_id, full_name, passport_data, address, email, telephone_number) VALUES (4, 'Женя', 20230322, 'улица Яхтенная 15', 'whale@gmail.com', 89112442323);




INSERT INTO "Library"."Storage" (storage_id, room, shelf, shelving) OVERRIDING SYSTEM VALUE VALUES (1, 1, 8, 3);
INSERT INTO "Library"."Storage" (storage_id, room, shelf, shelving) OVERRIDING SYSTEM VALUE VALUES (2, 1, 6, 5);
INSERT INTO "Library"."Storage" (storage_id, room, shelf, shelving) OVERRIDING SYSTEM VALUE VALUES (3, 2, 11, 2);
INSERT INTO "Library"."Storage" (storage_id, room, shelf, shelving) OVERRIDING SYSTEM VALUE VALUES (4, 3, 16, 2);




INSERT INTO "Library"."Stored" (copy_id, storage_id, stored_from, stored_until, status, stored_id) OVERRIDING SYSTEM VALUE VALUES (1, 1, '2021-12-12', '2021-12-31', 'в наличии', 1);
INSERT INTO "Library"."Stored" (copy_id, storage_id, stored_from, stored_until, status, stored_id) OVERRIDING SYSTEM VALUE VALUES (2, 2, '2021-10-12', '2022-01-29', 'в наличии', 2);
INSERT INTO "Library"."Stored" (copy_id, storage_id, stored_from, stored_until, status, stored_id) OVERRIDING SYSTEM VALUE VALUES (3, 3, '2021-11-13', '2022-02-05', 'занята', 3);
INSERT INTO "Library"."Stored" (copy_id, storage_id, stored_from, stored_until, status, stored_id) OVERRIDING SYSTEM VALUE VALUES (4, 4, '2021-09-01', '2021-11-11', 'в наличии', 4);




INSERT INTO "Library"."Subscription" (return_date, fine, "from", "to", copy_id, card_id, subscription_id) OVERRIDING SYSTEM VALUE VALUES ('2023-04-19', 0, '2022-02-01', '2024-02-01', 1, 100, 1);
INSERT INTO "Library"."Subscription" (return_date, fine, "from", "to", copy_id, card_id, subscription_id) OVERRIDING SYSTEM VALUE VALUES ('2023-02-13', 0, '2023-01-18', '2023-02-26', 2, 101, 2);
INSERT INTO "Library"."Subscription" (return_date, fine, "from", "to", copy_id, card_id, subscription_id) OVERRIDING SYSTEM VALUE VALUES ('2023-01-16', 0, '2022-11-15', '2023-02-02', 3, 102, 3);
INSERT INTO "Library"."Subscription" (return_date, fine, "from", "to", copy_id, card_id, subscription_id) OVERRIDING SYSTEM VALUE VALUES ('2023-02-09', 1000, '2022-12-10', '2023-02-01', 4, 103, 4);




INSERT INTO "Library"."Waybill" (waybill_code, provider, w_date) OVERRIDING SYSTEM VALUE VALUES (1, 'Буквоед', '2022-09-12');
INSERT INTO "Library"."Waybill" (waybill_code, provider, w_date) OVERRIDING SYSTEM VALUE VALUES (2, 'Буквоед', '2022-09-14');
INSERT INTO "Library"."Waybill" (waybill_code, provider, w_date) OVERRIDING SYSTEM VALUE VALUES (3, 'отсутствует', '2022-09-01');
INSERT INTO "Library"."Waybill" (waybill_code, provider, w_date) OVERRIDING SYSTEM VALUE VALUES (4, 'Буквоед', '2022-09-19');




SELECT pg_catalog.setval('"Library"."Act_of_accounting_accounting_act_id_seq"', 4, true);




SELECT pg_catalog.setval('"Library"."Admission_admission_id_seq"', 6, true);




SELECT pg_catalog.setval('"Library"."Book_information_book_code_seq"', 4, true);




SELECT pg_catalog.setval('"Library"."Copy_copy_id_seq"', 4, true);



SELECT pg_catalog.setval('"Library"."Librarian_employee_id_seq"', 5, true);




SELECT pg_catalog.setval('"Library"."Operation_operation_id_seq"', 4, true);




SELECT pg_catalog.setval('"Library"."Publishing_house_publishing_house_id_seq"', 4, true);




SELECT pg_catalog.setval('"Library"."Storage_storage_id_seq"', 4, true);




SELECT pg_catalog.setval('"Library"."Stored_stored_id_seq"', 4, true);




SELECT pg_catalog.setval('"Library"."Subscription_subscription_id_seq"', 4, true);




SELECT pg_catalog.setval('"Library"."Waybill_waybill_code_seq"', 4, true);



ALTER TABLE ONLY "Library"."Library_card"
    ADD CONSTRAINT "Library_card_pkey" PRIMARY KEY (card_id);




ALTER TABLE ONLY "Library"."Operation"
    ADD CONSTRAINT "Operation_pkey" PRIMARY KEY (operation_id);




ALTER TABLE ONLY "Library"."Reader"
    ADD CONSTRAINT "Reader_pkey" PRIMARY KEY (reader_id);




ALTER TABLE ONLY "Library"."Stored"
    ADD CONSTRAINT "Stored_pkey" PRIMARY KEY (stored_id);




ALTER TABLE ONLY "Library"."Subscription"
    ADD CONSTRAINT "Subscription_pkey" PRIMARY KEY (subscription_id);




ALTER TABLE ONLY "Library"."Act_of_accounting"
    ADD CONSTRAINT accounting_act_pkey PRIMARY KEY (accounting_act_id);



ALTER TABLE ONLY "Library"."Admission"
    ADD CONSTRAINT admission_pkey PRIMARY KEY (admission_id);




ALTER TABLE ONLY "Library"."Book_information"
    ADD CONSTRAINT book_information_pkey PRIMARY KEY (book_code);




ALTER TABLE ONLY "Library"."Copy"
    ADD CONSTRAINT copy_pkey PRIMARY KEY (copy_id);




ALTER TABLE ONLY "Library"."Edition"
    ADD CONSTRAINT edition_pkey PRIMARY KEY (library_edition_code);




ALTER TABLE ONLY "Library"."Librarian"
    ADD CONSTRAINT librarian_pkey PRIMARY KEY (employee_id);




ALTER TABLE ONLY "Library"."Publishing_house"
    ADD CONSTRAINT publishing_house_pkey PRIMARY KEY (publishing_house_id);




ALTER TABLE ONLY "Library"."Storage"
    ADD CONSTRAINT storage_pkey PRIMARY KEY (storage_id);




ALTER TABLE ONLY "Library"."Waybill"
    ADD CONSTRAINT waybill_pkey PRIMARY KEY (waybill_code);




ALTER TABLE ONLY "Library"."Library_card"
    ADD CONSTRAINT "Reader_fkey" FOREIGN KEY (reader_id) REFERENCES "Library"."Reader"(reader_id) ON UPDATE RESTRICT ON DELETE RESTRICT;




ALTER TABLE ONLY "Library"."Operation"
    ADD CONSTRAINT act_of_accounting_fkey FOREIGN KEY (accounting_act_id) REFERENCES "Library"."Act_of_accounting"(accounting_act_id) ON UPDATE RESTRICT ON DELETE RESTRICT;



ALTER TABLE ONLY "Library"."Operation"
    ADD CONSTRAINT admission_fkey FOREIGN KEY (admission_id) REFERENCES "Library"."Admission"(admission_id) ON UPDATE RESTRICT ON DELETE RESTRICT;




ALTER TABLE ONLY "Library"."Stored"
    ADD CONSTRAINT copy_fkey FOREIGN KEY (copy_id) REFERENCES "Library"."Copy"(copy_id) ON UPDATE RESTRICT ON DELETE RESTRICT;




ALTER TABLE ONLY "Library"."Subscription"
    ADD CONSTRAINT copy_fkey FOREIGN KEY (copy_id) REFERENCES "Library"."Copy"(copy_id) ON UPDATE RESTRICT ON DELETE RESTRICT;




ALTER TABLE ONLY "Library"."Operation"
    ADD CONSTRAINT copy_fkey FOREIGN KEY (copy_id) REFERENCES "Library"."Copy"(copy_id) ON UPDATE RESTRICT ON DELETE RESTRICT;




ALTER TABLE ONLY "Library"."Copy"
    ADD CONSTRAINT edition_fkey FOREIGN KEY (library_edition_code) REFERENCES "Library"."Edition"(library_edition_code) ON UPDATE RESTRICT ON DELETE RESTRICT;



ALTER TABLE ONLY "Library"."Edition"
    ADD CONSTRAINT information_book_fkey FOREIGN KEY (book_code) REFERENCES "Library"."Book_information"(book_code) ON UPDATE RESTRICT ON DELETE RESTRICT;




ALTER TABLE ONLY "Library"."Act_of_accounting"
    ADD CONSTRAINT librarian_fkey FOREIGN KEY (employee_id) REFERENCES "Library"."Librarian"(employee_id) ON UPDATE RESTRICT ON DELETE RESTRICT;



ALTER TABLE ONLY "Library"."Subscription"
    ADD CONSTRAINT library_card_fkey FOREIGN KEY (card_id) REFERENCES "Library"."Library_card"(card_id) ON UPDATE RESTRICT ON DELETE RESTRICT;




ALTER TABLE ONLY "Library"."Edition"
    ADD CONSTRAINT publishing_house_id FOREIGN KEY (publishing_id) REFERENCES "Library"."Publishing_house"(publishing_house_id) ON UPDATE RESTRICT ON DELETE RESTRICT;



ALTER TABLE ONLY "Library"."Stored"
    ADD CONSTRAINT storage_fkey FOREIGN KEY (storage_id) REFERENCES "Library"."Storage"(storage_id) ON UPDATE RESTRICT ON DELETE RESTRICT;




ALTER TABLE ONLY "Library"."Admission"
    ADD CONSTRAINT waybill_fkey FOREIGN KEY (waybill_code) REFERENCES "Library"."Waybill"(waybill_code) ON UPDATE RESTRICT ON DELETE RESTRICT;

--
-- PostgreSQL database dump complete
--

